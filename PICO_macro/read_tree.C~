void read_tree(TString filename){

  gStyle->SetOptStat(0000);
  gStyle->SetOptFit(1111);
 
  // Int_t time = 0; 
  //Float_t v1 = 0, v2 = 0, v3 = 0, v4 = 0, v5 = 0, v6 = 0, v7 = 0, i1 = 0, i2 = 0, i3 = 0, i4 = 0, i5 = 0, i6 = 0, i7 = 0;

 Int_t Time  = 0; 
 Int_t Index = 0;
 Float_t I_drift, I_G1T, I_G2T, I_G3T, V_G1T, V_G2T, V_G3T;
 Float_t V_drift, I_G1B, I_G2B, I_G3B, V_G1B, V_G2B, V_G3B;

 //Float_t xlow  = -100;
  //Float_t xhigh =  hlim;
  //Int_t   xbins = (xhigh-xlow)/Temp;
  Int_t   ybins =    0;
  Float_t ylow  =    0;
  Float_t yhigh =    0;
  
  char    tree_name[256] = "t1";
  TFile* f1 = new TFile(filename);
  if( f1->IsZombie() ){
    cout << " Error opening ROOT File" << endl;
    exit(-1);
  }
  
  TTree* t1 =(TTree*)f1->Get(tree_name);
  t1->SetBranchAddress("Index",   &Index);
  t1->SetBranchAddress("Time",    &Time);
  t1->SetBranchAddress("V_drift", &V_drift);
  t1->SetBranchAddress("I_drift", &I_drift);
  t1->SetBranchAddress("I_G1T",   &I_G1T);
  t1->SetBranchAddress("V_G1T",   &V_G1T);
  t1->SetBranchAddress("I_G2T",   &I_G2T);
  t1->SetBranchAddress("V_G2T",   &V_G2T);
  t1->SetBranchAddress("I_G3T",   &I_G3T);
  t1->SetBranchAddress("V_G3T",   &V_G3T);
  t1->SetBranchAddress("I_G1B",   &I_G1B);
  t1->SetBranchAddress("V_G1B",   &V_G1B);
  t1->SetBranchAddress("I_G2B",   &I_G2B);
  t1->SetBranchAddress("V_G2B",   &V_G2B);
  t1->SetBranchAddress("I_G3B",   &I_G3B);
  t1->SetBranchAddress("V_G3B",   &V_G3B);

  cout << "Entries= " <<t1->GetEntries() <<"  Time_min="<<t1->GetMinimum("Time") <<"  Time_max="<<t1->GetMaximum("Time") << "  Time_tot="<<t1->GetMaximum("Time")-t1->GetMinimum("Time") <<endl;

  Int_t   time_l   = t1->GetMinimum("Time")-500;
  Int_t   time_h   = t1->GetMaximum("Time")+500;
  Int_t   time_bin = (Int_t)(time_h-time_l+1)/1;
  Int_t   curr_l   =    -22;
  Int_t   curr_h   =     22;
  Int_t   curr_bin =   4000; 
  Int_t   volt_l   =  -4000;
  Int_t   volt_h   =    500;
  Int_t   volt_bin =   4500; 
  // Current
  //TH1F* h1d = new TH1F("h1d", "h1d",  time_bin, time_l, time_h);// curr_bin, curr_l, curr_h);  
  TH2F* ig3t = new TH2F("ig3t", "ig3t",  time_bin, time_l, time_h, curr_bin, curr_l, curr_h);  
  TH2F* ig3b = new TH2F("ig3b", "ig3b",  time_bin, time_l, time_h, curr_bin, curr_l, curr_h);  
  TH2F* ig2t = new TH2F("ig2t", "ig2t",  time_bin, time_l, time_h, curr_bin, curr_l, curr_h);  
  TH2F* ig2b = new TH2F("ig2b", "ig2b",  time_bin, time_l, time_h, curr_bin, curr_l, curr_h);  
  TH2F* ig1t = new TH2F("ig1t", "ig1t",  time_bin, time_l, time_h, curr_bin, curr_l, curr_h);  
  TH2F* ig1b = new TH2F("ig1b", "ig1b",  time_bin, time_l, time_h, curr_bin, curr_l, curr_h);  
  TH2F* idri = new TH2F("idri", "idri",  time_bin, time_l, time_h, curr_bin, curr_l, curr_h);  
  // Voltage
  TH2F* vg3t = new TH2F("vg3t","vg3t",2000, time_l, time_h, volt_bin, volt_l, volt_h);  
  TH2F* vg3b = new TH2F("vg3b","vg3b",2000, time_l, time_h, volt_bin, volt_l, volt_h);  
  TH2F* vg2t = new TH2F("vg2t","vg2t",2000, time_l, time_h, volt_bin, volt_l, volt_h);  
  TH2F* vg2b = new TH2F("vg2b","vg2b",2000, time_l, time_h, volt_bin, volt_l, volt_h);  
  TH2F* vg1t = new TH2F("vg1t","vg1t",2000, time_l, time_h, volt_bin, volt_l, volt_h); 
  TH2F* vg1b = new TH2F("vg1b","vg1b",2000, time_l, time_h, volt_bin, volt_l, volt_h);
  TH2F* vdri = new TH2F("vdri","vdri",2000, time_l, time_h, volt_bin, volt_l, volt_h);

  TH1I* h_time = new TH1I("h_time", "title",  2000, 180400, 181400);  
 
  
  /* TCanvas* ig3 = new TCanvas("ig3", "I_G3T&B", 900, 600);
  t1->Project("ig3b", "I_G3B:Time");//, "time>18000");
  t1->Project("ig3t", "I_G3T:Time");
  ig3b->SetMarkerColor(kBlue);
  ig3b->SetMarkerSize(1.5);
  ig3b->GetXaxis()->SetTitle("Timestamp");
  ig3b->GetYaxis()->SetTitle("Current_G1");
  ig3b->Draw("L");
  ig3t->SetMarkerColor(kRed);
  ig3t->SetMarkerSize(1.5);
  ig3t->Draw("LSAME");
  */

  // Plot globali corrente e poi dopo tensione
  TCanvas* current = new TCanvas("current", "Current", 900, 650);
  //t1->Project("ig1b", "I_G3B:Time");//, "time>18000");
  t1->Project("ig1t", "I_G3T:Time");
  //t1->Project("ig2b", "I_G2B:Time");
  //t1->Project("ig2t", "I_G2T:Time");
  //t1->Project("ig3b", "I_G1B:Time");
  //t1->Project("ig3t", "I_G1T:Time");
  //t1->Project("idri", "I_drift:Time");
  ig1t->SetMarkerColor(kRed);
  ig1b->SetMarkerColor(kMagenta);
  ig2t->SetMarkerColor(kGreen);
  ig2b->SetMarkerColor(kYellow);
  ig3t->SetMarkerColor(kCyan);
  ig3b->SetMarkerColor(kBlue);
  idri->SetMarkerColor(kBlack);
  
  ig3t->SetMarkerStyle(7);
  ig3b->SetMarkerStyle(7);
  ig2t->SetMarkerStyle(7);
  ig2b->SetMarkerStyle(7);
  ig1t->SetMarkerStyle(7);
  ig1b->SetMarkerStyle(7);
  idri->SetMarkerStyle(7);

  idri->GetXaxis()->SetTitle("Timestamp");
  idri->GetYaxis()->SetTitle("Current [nA]");
  //  ig1b->SetMarkerSize(1.5);
  idri->Draw("");
  ig1t->Draw("SAME");
  ig2t->Draw("SAME");
  ig3t->Draw("SAME");
  ig1b->Draw("SAME");
  ig2b->Draw("SAME");
  ig3b->Draw("SAME");

  TLegend *leg_cur = new TLegend(0.8, 0.1, 0.9,0.35);
  leg_cur->AddEntry("ig3b","G3B","p");
  leg_cur->AddEntry("ig3t","G3T","p");
  leg_cur->AddEntry("ig2b","G2B","p");
  leg_cur->AddEntry("ig2t","G2T","p");
  leg_cur->AddEntry("ig1b","G1B","p");
  leg_cur->AddEntry("ig1t","G1T","p");
  leg_cur->AddEntry("idri","DRI","p");
  leg_cur->SetFillColor(0);
  leg_cur->Draw();

  TCanvas* voltage = new TCanvas("voltage", "Voltage", 900, 600);
  t1->Project("vg1b", "V_G1B:Time");//, "time>18000");
  t1->Project("vg1t", "V_G1T:Time");
  t1->Project("vg2b", "V_G2B:Time");
  t1->Project("vg2t", "V_G2T:Time");
  t1->Project("vg3b", "V_G3B:Time");
  t1->Project("vg3t", "V_G3T:Time");
  t1->Project("vdri", "V_drift:Time");
  vg3t->SetMarkerStyle(7);
  vg3b->SetMarkerStyle(7);
  vg2t->SetMarkerStyle(7);
  vg2b->SetMarkerStyle(7);
  vg1t->SetMarkerStyle(7);
  vg1b->SetMarkerStyle(7);
  vdri->SetMarkerStyle(7);

  vdri->GetXaxis()->SetTitle("Timestamp");
  vdri->GetYaxis()->SetTitle("Voltage [V]");
  vdri->SetMarkerColor(kRed);
  vg1t->SetMarkerColor(kRed);
  vg1b->SetMarkerColor(kMagenta);
  vg2t->SetMarkerColor(kGreen);
  vg2b->SetMarkerColor(kYellow);
  vg3t->SetMarkerColor(kCyan);
  vg3b->SetMarkerColor(kBlue);
  vdri->SetMarkerColor(kBlack);
  
  vdri->Draw("");
  vg1t->Draw("SAME");
  vg2t->Draw("SAME");
  vg3t->Draw("SAME");
  vg1b->Draw("SAME");
  vg2b->Draw("SAME");
  vg3b->Draw("SAME");

  TLegend *leg_volt = new TLegend(0.8, 0.1, 0.9,0.35);
  leg_volt->AddEntry("vg3b","G3B","p");
  leg_volt->AddEntry("vg3t","G3T","p");
  leg_volt->AddEntry("vg2b","G2B","p");
  leg_volt->AddEntry("vg2t","G2T","p");
  leg_volt->AddEntry("vg1b","G1B","p");
  leg_volt->AddEntry("vg1t","G1T","p");
  leg_volt->AddEntry("vdri","DRI","p");
  leg_volt->SetFillColor(0);
  leg_volt->Draw();
}

